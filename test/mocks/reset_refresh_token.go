// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/usecase/reset_refresh_token.go

// Package mock_usecase is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResetRefreshToken is a mock of ResetRefreshToken interface.
type MockResetRefreshToken struct {
	ctrl     *gomock.Controller
	recorder *MockResetRefreshTokenMockRecorder
}

// MockResetRefreshTokenMockRecorder is the mock recorder for MockResetRefreshToken.
type MockResetRefreshTokenMockRecorder struct {
	mock *MockResetRefreshToken
}

// NewMockResetRefreshToken creates a new mock instance.
func NewMockResetRefreshToken(ctrl *gomock.Controller) *MockResetRefreshToken {
	mock := &MockResetRefreshToken{ctrl: ctrl}
	mock.recorder = &MockResetRefreshTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResetRefreshToken) EXPECT() *MockResetRefreshTokenMockRecorder {
	return m.recorder
}

// Reset mocks base method.
func (m *MockResetRefreshToken) Reset(userId string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reset", userId)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Reset indicates an expected call of Reset.
func (mr *MockResetRefreshTokenMockRecorder) Reset(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reset", reflect.TypeOf((*MockResetRefreshToken)(nil).Reset), userId)
}
