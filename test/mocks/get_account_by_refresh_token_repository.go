// Code generated by MockGen. DO NOT EDIT.
// Source: internal/data/protocols/get_account_by_refresh_token_repository.go

// Package mock_protocols is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/Williancc1557/Oauth2.0-golang/internal/domain/models"
	gomock "github.com/golang/mock/gomock"
)

// MockGetAccountByRefreshTokenRepository is a mock of GetAccountByRefreshTokenRepository interface.
type MockGetAccountByRefreshTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockGetAccountByRefreshTokenRepositoryMockRecorder
}

// MockGetAccountByRefreshTokenRepositoryMockRecorder is the mock recorder for MockGetAccountByRefreshTokenRepository.
type MockGetAccountByRefreshTokenRepositoryMockRecorder struct {
	mock *MockGetAccountByRefreshTokenRepository
}

// NewMockGetAccountByRefreshTokenRepository creates a new mock instance.
func NewMockGetAccountByRefreshTokenRepository(ctrl *gomock.Controller) *MockGetAccountByRefreshTokenRepository {
	mock := &MockGetAccountByRefreshTokenRepository{ctrl: ctrl}
	mock.recorder = &MockGetAccountByRefreshTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetAccountByRefreshTokenRepository) EXPECT() *MockGetAccountByRefreshTokenRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockGetAccountByRefreshTokenRepository) Get(refreshToken string) (*models.AccountModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", refreshToken)
	ret0, _ := ret[0].(*models.AccountModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGetAccountByRefreshTokenRepositoryMockRecorder) Get(refreshToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGetAccountByRefreshTokenRepository)(nil).Get), refreshToken)
}
